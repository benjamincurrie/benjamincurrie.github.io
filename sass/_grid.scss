* {
box-sizing: border-box;
}

$device-mobile: 768;
$device-tablet: 992;
$device-desktop: 1200;
$grid__cols: 12;

$map-grid-props: (
	'': 0,
	'-mobile': $device-mobile,
	'-tablet': $device-tablet,
	'-desktop': $device-desktop
);

@mixin create-mq($breakpoint, $min-or-max) {
	@if($breakpoint == 0) {
		@content;
	} @else {
		@media screen and (#{$min-or-max}-width: $breakpoint *1px) {
			@content;
		}
	}
}

@mixin create-col-classes($modifier, $grid-cols, $breakpoint) {
	@include create-mq($breakpoint, 'min') {
		.offset#{$modifier}-0 {
			margin-left: 0;
		}
		@for $i from 1 through $grid-cols {
			.col#{$modifier}-#{$i} {
				padding: $spacing-base;
				flex-basis: (100 / ($grid-cols / $i) ) * 1%;
			}
			.offset#{$modifier}-#{$i} {
				margin-left: (100 / ($grid-cols / $i) ) * 1%;
			}
		}
	}
}

@each $modifier , $breakpoint in $map-grid-props {
	@if($modifier == '') {
		$modifier: '-xs';
	}
	@include create-mq($breakpoint - 1, 'max') {
		.hidden#{$modifier}-down {
			display: none !important;
		}
	}
	@include create-mq($breakpoint, 'min') {
		.hidden#{$modifier}-up {
			display: none !important;
		}
	}
}

.grid {
	max-width: $device-desktop * 1px;
	margin: 0 auto;
	display: flex;
	flex-wrap: wrap;
	padding: $spacing-base;
	&--fluid {
		margin: 0;
		max-width: 100%;
	}
	@each $modifier , $breakpoint in $map-grid-props {
		@include create-col-classes($modifier, $grid__cols, $breakpoint);
	}
	&.reversed {
		flex-direction: row-reverse;
	}
}